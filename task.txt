Тестовое задание "Сервис работы с XML" (уровень Java Middle Developer)

ОПИСАНИЕ ЗАДАНИЯ

Общее описание.
Требуется разработать REST-сервис работы с xml и клиент для него. Сервис должен сохранять, валидировать и отдавать по запросу файлы формата XML. XML-файлы и XSD-схемы для них изначально лежат на файловой системе или в директории resources. Клиент минимальный, в основном для проверки работоспособности и тестирования.

Функциональные требования.
API сервиса:
   * saveXsd - сохранение в БД связи названия XML-файла и XSD-схемы.
На вход передаётся название XML-файла и название XSD-схемы, в таблицу xml_xsd происходит сохранение связи.
На выходе - ответ об успешности/неуспешности сохранения.
   * validateXml - валидация XML-файла.
На вход передаётся название XML-файла, сервис находит название XSD-схемы для данного файла через таблицу xml_xsd и производит валидацию.
Если валидация успешна, сохранение названия файла в таблицу valid, если нет - в таблицу invalid.
На выходе - информация о валидности/невалидности проверяемого файла.
   * saveXml - сохранение XML-файла.
На вход передаётся название XML-файла.
Наличие названия файла проверяется в таблицах valid/invalid. Если файл валидный - производится сохранение в таблице proceed, в противном случае нет. Файл также считается невалидным, если его нет ни в одной из таблиц.
На выходе - информация о сохранении/несохранении файла и причина.
   * getXml - получение XML-файла по названию.
На вход передаётся название XML-файла.
Если название содержится в таблице proceed - передача файла.
Если название содержится в таблице valid, но не в proceed - передача файла с сообщением, что файл валидный, но несохраненный.
Если название содержится в таблице invalid - передача файла c сообщением, что файл невалидный.
Если название не содержится ни в одной из таблиц - информация о том, что файл неизвестный.
На выходе - файл и/или информация о нём.

На каждом действии, ошибке или нештатной ситуации в лог должно писаться соответствующее понятное информационное сообщение.

Требование к покрытию unit-тестами.
* Покрытие не ниже 80% или покрытие всех public-методов.

СТЕК ТЕХНОЛОГИЙ

Обязательно:
Backend Spring Boot, REST API
БД Postgres

При желании:
Docker

ПРИМЕР ДАННЫХ

Пример файла user.xml
<User>
	<Name>Иван</Name>
	<MiddleName>Иванович</MiddleName>
	<Surname>Иванов</Surname>
</User>

Пример файла user.xsd
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="User">
    <xs:complexType>
      <xs:sequence>
        <xs:element type="xs:string" name="Name"/>
        <xs:element type="xs:string" name="MiddleName"/>
        <xs:element type="xs:string" name="Surname"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>

Пример таблиц.
Таблица xml_xsd
|   xml   |   xsd   |
---------------------
|user.xml |user.xsd |
...

Таблица valid
|file_name|
-----------
|user.xml |
...

Таблица invalid
|file_name|
-----------
|...      |

Таблица proceed
|file_name|
-----------
|...      |
